{
  "$schema": "http://json-schema.org/draft-07/schema",

  "description": "An avatar metadata object. Holds extra information about an avatar such as its name, author(s), color, and more.",
  "markdownDescription": "```ts\n{\n  name: string,\n  description: string,\n  author: string <OR> authors: string[],\n  version: string,\n  color: string,\n  `badge_color_${string}`: string,\n  background: unknown,\n  id: unknown,\n  autoScripts: string[],\n  autoAnims: string[],\n  ignoredTextures: string[],\n  resources: string[],\n  customizations: {\n    [partPath]: {\n      remove: boolean,\n      visible: boolean,\n      parentType: string,\n      moveTo: string,\n      primaryRenderType: string,\n      secondaryRenderType: string,\n      smooth: boolean\n    }\n  }\n}\n```\n***\nAn avatar metadata object. Holds extra information about an avatar such as its name, author(s), color, and more.",

  "type": "object",

  "defaultSnippets": [
    {"label": "​​​{}", "body": "^{$1}", "markdownDescription": "```ts\n{}\n```\n***\nStart from scratch."},
    {"label": "No metadata", "body": "^", "markdownDescription": "This file can be completely blank, it will treat it as if you don't want any data set."},
    {"label": "​Minimum metadata, One author", "body": {
      "name": "${1:My Avatar}",
      "description": "${2:A very descriptive description.}",
      "author": "${3:Username}"
    }, "markdownDescription": "```ts\n{\n  name: string,\n  description: string,\n  author: string\n}\n```\n***\nIncludes only the \"necessary\" data."},
    {"label": "​Minimum metadata, Several authors", "body": {
      "name": "${1:My Avatar}",
      "description": "${2:A very descriptive description.}",
      "authors": ["${3:Username}"]
    }, "markdownDescription": "```ts\n{\n  name: string,\n  description: string,\n  authors: string[]\n}\n```\n***\nIncludes only the \"necessary\" data."},
    {"label": "​​Basic metadata, One author", "body": {
      "name": "${1:My Avatar}",
      "description": "${2:A very descriptive description.}",
      "author": "${3:Username}",
      "version": "${4|0.1.4,0.1.3,0.1.2,0.1.1,0.1.0|}",
      "color": "${5:#RRGGBB}"
    }, "markdownDescription": "```ts\n{\n  name: string,\n  description: string,\n  author: string,\n  version: string,\n  color: string\n}\n```\n***\nIncludes some basic data such as the name, author, Figura version, and theme color."},
    {"label": "​​Basic metadata, Several authors", "body": {
      "name": "${1:My Avatar}",
      "description": "${2:A very descriptive description.}",
      "authors": ["${3:Username}"],
      "version": "${4|0.1.4,0.1.3,0.1.2,0.1.1,0.1.0|}",
      "color": "${5:#RRGGBB}"
    }, "markdownDescription": "```ts\n{\n  name: string,\n  description: string,\n  authors: string[],\n  version: string,\n  color: string\n}\n```\n***\nIncludes some basic data such as the name, authors, Figura version, and theme color."},
    {"label": "​​Full metadata, One author", "body": {
      "name": "${1:My Avatar}",
      "description": "${2:A very descriptive description.}",
      "author": "${3:Username}",
      "version": "${4|0.1.4,0.1.3,0.1.2,0.1.1,0.1.0|}",
      "color": "${5:#RRGGBB}",
      "badge_color_${6|donator,translator,texture_artist,contest,discord_staff,dev,immortalized|}": "${7:#RRGGBB}",
      "autoScripts": ["^$8"],
      "autoAnims": ["^$9"],
      "ignoredTextures": ["^$10"],
      "resources": ["^$11"],
      "customizations": "^{$12}"
    }, "markdownDescription": "```ts\n{\n  name: string,\n  description: string,\n  author: string,\n  version: string,\n  color: string,\n  `badge_color_${string}`: string,\n  autoScripts: string[],\n  autoAnims: string[],\n  ignoredTextures: string[],\n  resources: string[],\n  customizations: {\n    [partPath]: {\n      remove: boolean,\n      visible: boolean,\n      parentType: string,\n      moveTo: string,\n      primaryRenderType: string,\n      secondaryRenderType: string,\n      smooth: boolean\n    }\n  }\n}\n```\n***\nIncludes all possible data an avatar can have."},
    {"label": "​​Full metadata, Several authors", "body": {
      "name": "${1:My Avatar}",
      "description": "${2:A very descriptive description.}",
      "authors": ["${3:Username}"],
      "version": "${4|0.1.4,0.1.3,0.1.2,0.1.1,0.1.0|}",
      "color": "${5:#RRGGBB}",
      "badge_color_${6|donator,translator,texture_artist,contest,discord_staff,dev,immortalized|}": "${7:#RRGGBB}",
      "autoScripts": ["^$8"],
      "autoAnims": ["^$9"],
      "ignoredTextures": ["^$10"],
      "resources": ["^$11"],
      "customizations": "^{$12}"
    }, "markdownDescription": "```ts\n{\n  name: string,\n  description: string,\n  authors: string[],\n  version: string,\n  color: string,\n  `badge_color_${string}`: string,\n  autoScripts: string[],\n  autoAnims: string[],\n  ignoredTextures: string[],\n  resources: string[],\n  customizations: {\n    [partPath]: {\n      remove: boolean,\n      visible: boolean,\n      parentType: string,\n      moveTo: string,\n      primaryRenderType: string,\n      secondaryRenderType: string,\n      smooth: boolean\n    }\n  }\n}\n```\n***\nIncludes all possible data an avatar can have."}
  ],

  "definitions": {
    "customization": {
      "description": "A customized part.",
      "markdownDescription": "```ts\n[partPath]: {\n  remove: boolean,\n  visible: boolean,\n  parentType: string,\n  moveTo: string,\n  primaryRenderType: string,\n  secondaryRenderType: string,\n  smooth: boolean\n}\n```\n***\nA customized part.",

      "type": "object",

      "properties": {
        "remove": {
          "description": "Sets if this model part should be deleted before the avatar is created.",
          "markdownDescription": "```ts\nremove: boolean\n```\n***\nSets if this model part should be deleted before the avatar is created.",

          "type": "boolean"
        },

        "visible": {
          "description": "Sets if this model part is visible by default.\nThis is usually set by Blockbench, but can also be set here if you wish.",
          "markdownDescription": "```ts\nvisible: boolean\n```\n***\nSets if this model part is visible by default.\n\nThis is usually set by Blockbench, but can also be set here if you wish.",

          "type": "boolean"
        },

        "parentType": {
          "description": "The \"parent\" of this model part.\nThis is usually set by keywords, but can also be set here if you wish.",
          "markdownDescription": "```ts\nparentType: string\n```\n***\nThe \"parent\" of this model part.\n\nThis is usually set by keywords, but can also be set here if you wish.",

          "type": "string",

          "anyOf": [
            {"enum": [
              "None",
              "Head", "Body", "LeftArm", "RightArm", "LeftLeg", "RightLeg",
              "HelmetPivot", "ChestplatePivot", "LeftShoulderPivot", "RightShoulderPivot",
              "LeggingsPivot", "LeftLeggingPivot", "RightLeggingPivot", "LeftBootPivot", "RightBootPivot",
              "Cape", "LeftElytra", "RightElytra",
              "LeftItemPivot", "RightItemPivot", "HelmetItemPivot", "LeftElytraPivot", "RightElytraPivot",
              "LeftSpyglassPivot", "RightSpyglassPivot",
              "LeftParrotPivot", "RightParrotPivot",
              "World", "Camera", "Hud",
              "Skull", "Portrait",
              "Arrow", "Trident", "Item"
            ]},
            {"pattern": "^(None|NONE|Model|MODEL|Head|HEAD|Body|BODY|LeftArm|LEFT_ARM|RightArm|RIGHT_ARM|LeftLeg|LEFT_LEG|RightLeg|RIGHT_LEG|HelmetPivot|HELMET_PIVOT|ChestplatePivot|CHESTPLATE_PIVOT|ChestplateBodyPivot|CHESTPLATE_BODY_PIVOT|LeftShoulderPivot|LEFT_SHOULDER_PIVOT|RightShoulderPivot|RIGHT_SHOULDER_PIVOT|LeggingsPivot|LEGGINGS_PIVOT|BeltPivot|BELT_PIVOT|LeftLeggingPivot|LEFT_LEGGING_PIVOT|RightLeggingPivot|RIGHT_LEGGING_PIVOT|LeftBootPivot|LEFT_BOOT_PIVOT|RightBootPivot|RIGHT_BOOT_PIVOT|Cape|CAPE|LeftElytra|LEFT_ELYTRA|LeftElytron|LEFT_ELYTRON|RightElytra|RIGHT_ELYTRA|RightElytron|RIGHT_ELYTRON|LeftItemPivot|LEFT_ITEM_PIVOT|RightItemPivot|RIGHT_ITEM_PIVOT|HelmetItemPivot|HELMET_ITEM_PIVOT|LeftElytraPivot|LEFT_ELYTRA_PIVOT|LeftWingPivot|LEFT_WING_PIVOT|RightElytraPivot|RIGHT_ELYTRA_PIVOT|RightWingPivot|RIGHT_WING_PIVOT|LeftSpyglassPivot|LEFT_SPYGLASS_PIVOT|RightSpyglassPivot|RIGHT_SPYGLASS_PIVOT|LeftParrotPivot|LEFT_PARROT_PIVOT|RightParrotPivot|RIGHT_PARROT_PIVOT|World|WORLD|Camera|CAMERA|Billboard|BILLBOARD|Hud|HUD|HeadsUpDisplay|Gui|GUI|GraphicalUserInterface|JraphicalUserInterface|Skull|SKULL|☠️|Portrait|PORTRAIT|Arrow|ARROW|Trident|TRIDENT|Item|ITEM)$"}
          ]
        },

        "moveTo": {
          "description": "Changes the parent model part of this model part.",
          "markdownDescription": "```ts\nmoveTo: string\n```\n***\nChanges the parent model part of this model part.",

          "type": "string"
        },

        "primaryRenderType": {
          "description": "The render type of the primary layer of this part.",
          "markdownDescription": "The render type of the primary layer of this part.",

          "type": "string",

          "enum": [
            "NONE",
            "CUTOUT", "CUTOUT_CULL", "TRANSLUCENT", "TRANSLUCENT_CULL",
            "EMISSIVE", "EMISSIVE_SOLID", "EYES",
            "END_PORTAL", "END_GATEWAY", "TEXTURED_PORTAL",
            "GLINT", "GLINT2", "TEXTURED_GLINT",
            "LINES", "LINES_STRIP",
            "SOLID",
            "BLURRY"
          ]
        },

        "secondaryRenderType": {
          "description": "The render type of the secondary (emissive) layer of this part.",
          "markdownDescription": "The render type of the secondary (emissive) layer of this part.",

          "type": "string",

          "enum": [
            "NONE",
            "CUTOUT", "CUTOUT_CULL", "TRANSLUCENT", "TRANSLUCENT_CULL",
            "EMISSIVE", "EMISSIVE_SOLID", "EYES",
            "END_PORTAL", "END_GATEWAY", "TEXTURED_PORTAL",
            "GLINT", "GLINT2", "TEXTURED_GLINT",
            "LINES", "LINES_STRIP",
            "SOLID",
            "BLURRY"
          ]
        }
      }
    }
  },

  "properties": {
    "name": {
      "description": "The name of this avatar.\nIf this does not exist, the folder's name is used as the avatar name.",
      "markdownDescription": "```ts\nname: string\n```\n***\nThe name of this avatar.  \nIf this does not exist, the folder's name is used as the avatar name.",

      "type": "string",

      "defaultSnippets": [{"body": "$1"}],

      "minLength": 1,
      "pattern": "[^ \\f\\n\\r\\t]"
    },

    "description": {
      "description": "The description of this avatar. Appears under the avatar's name in the wardrobe.",
      "markdownDescription": "```ts\ndescription: string\n```\n***\nThe description of this avatar. Appears under the avatar's name in the wardrobe.",

      "type": "string",

      "defaultSnippets": [{"body": "$1"}],

      "minLength": 1,
      "pattern": "[^ \\f\\n\\r\\t]"
    },

    "author": {
      "description": "The sole author of this avatar.\nIf you wish to add multiple authors, see \"authors\" instead.",
      "markdownDescription": "```ts\nauthor: string\n```\n***\nThe sole author of this avatar.\n\nIf you wish to add multiple authors, see `authors` instead.",

      "type": "string",

      "defaultSnippets": [{"body": "$1"}],

      "minLength": 1,
      "pattern": "[^ \\f\\n\\r\\t]"
    },
    "authors": {
      "description": "A list of this avatar's authors.\nIf this avatar only has one author, you can also use \"author\" instead.",
      "markdownDescription": "```ts\nauthors: string[]\n```\n***\nA list of this avatar's authors.\n\nIf this avatar only has one author, you can also use `author` instead.",

      "type": "array",

      "minItems": 1,
      "items": {
        "type": "string",

        "defaultSnippets": [{"body": "$1"}],

        "minLength": 1,
        "pattern": "[^ \\f\\n\\r\\t]"
      }
    },
    "version": {
      "description": "The version of Figura this avatar is made for.\nIf this does not exist, no version checking will be done.\nThe version must be a valid semantic version.",
      "markdownDescription": "```ts\nversion: string\n```\n***\nThe version of Figura this avatar is made for.  \nIf this does not exist, no version checking will be done.\n\nThe version must be a valid semantic version.",

      "type": "string",

      "defaultSnippets": [
        {
          "body": "$1"
        },
        {"label": "Figura 0.1.4                       (0.1.4)", "body": "0.1.4"},
        {"label": "Figura 0.1.3                       (0.1.3)", "body": "0.1.3"},
        {"label": "Figura 0.1.3, Prerelease 5         (0.1.3-pre.5)", "body": "0.1.3-pre.5"},
        {"label": "Figura 0.1.3, Prerelease 4         (0.1.3-pre.4)", "body": "0.1.3-pre.4"},
        {"label": "Figura 0.1.3, Prerelease 3         (0.1.3-pre.3)", "body": "0.1.3-pre.3"},
        {"label": "Figura 0.1.3, Prerelease 2         (0.1.3-pre.2)", "body": "0.1.3-pre.2"},
        {"label": "Figura 0.1.3, Release Candidate 1  (0.1.3-rc.1)", "body": "0.1.3-rc.1"},
        {"label": "Figura 0.1.2                       (0.1.2)", "body": "0.1.2"},
        {"label": "Figura 0.1.1                       (0.1.1)", "body": "0.1.1"},
        {"label": "Figura 0.1.0                       (0.1.0)", "body": "0.1.0"},
        {"label": "Figura 0.1.0, Release Candidate 14 (0.1.0-rc.14)", "body": "0.1.0-rc.14"},
        {"label": "Figura 0.1.0, Release Candidate 13 (0.1.0-rc.13)", "body": "0.1.0-rc.13"},
        {"label": "Figura 0.1.0, Release Candidate 12 (0.1.0-rc.12)", "body": "0.1.0-rc.12"},
        {"label": "Figura 0.1.0, Release Candidate 11 (0.1.0-rc.11)", "body": "0.1.0-rc.11"},
        {"label": "Figura 0.1.0, Release Candidate 10 (0.1.0-rc.10)", "body": "0.1.0-rc.10"},
        {"label": "Figura 0.1.0, Release Candidate 9  (0.1.0-rc.9)", "body": "0.1.0-rc.9"},
        {"label": "Figura 0.1.0, Release Candidate 8  (0.1.0-rc.8)", "body": "0.1.0-rc.8"},
        {"label": "Figura 0.1.0, Release Candidate 7  (0.1.0-rc.7)", "body": "0.1.0-rc.7"},
        {"label": "Figura 0.1.0, Release Candidate 6  (0.1.0-rc.6)", "body": "0.1.0-rc.6"},
        {"label": "Figura 0.1.0, Release Candidate 5  (0.1.0-rc.5)", "body": "0.1.0-rc.5"},
        {"label": "Figura 0.1.0, Release Candidate 4  (0.1.0-rc.4)", "body": "0.1.0-rc.4"},
        {"label": "Figura 0.1.0, Release Candidate 3  (0.1.0-rc.3)", "body": "0.1.0-rc.3"},
        {"label": "Figura 0.1.0, Release Candidate 2  (0.1.0-rc.2)", "body": "0.1.0-rc.2"},
        {"label": "Figura 0.1.0, Release Candidate 1  (0.1.0-rc.1)", "body": "0.1.0-rc.1"},
        {"label": "Figura 0.1.0, Prerelease 6         (0.1.0-pre.6)", "body": "0.1.0-pre.6"},
        {"label": "Figura 0.1.0, Prerelease 5         (0.1.0-pre.5)", "body": "0.1.0-pre.5"},
        {"label": "Figura 0.1.0, Prerelease 4         (0.1.0-pre.4)", "body": "0.1.0-pre.4"},
        {"label": "Figura 0.1.0, Prerelease 3         (0.1.0-pre.3)", "body": "0.1.0-pre.3"},
        {"label": "Figura 0.1.0, Prerelease 2         (0.1.0-pre.2)", "body": "0.1.0-pre.2"},
        {"label": "Figura 0.1.0, Prerelease 1         (0.1.0-pre.1)", "body": "0.1.0-pre.1"}
      ],

      "pattern": "^(0|[1-9]\\d*)(\\.(0|[1-9]\\\\d*)){0,2}(-(pre|rc)\\.[1-9]\\\\d*)?(\\+.+)?$"
    },

    "color": {
      "description": "The primary color of this avatar.\nControls the color of the nameplate mark and the avatar info text color.\nColor can either be a special named color or a hex value. (The `#` is optional.)",
      "markdownDescription": "```ts\ncolor: string\n```\n***\nThe primary color of this avatar.  \nControls the color of the nameplate mark and the avatar info text color.\n\nColor can either be a special named color or a hex value. (The `#` is optional.)",

      "type": "string",

      "defaultSnippets": [
        {"label": "\"#...\"", "body": "#${1:RRGGBB}"},
        {"label": "\"AWESOME_BLUE\" (#5EA5FF)", "body": "AWESOME_BLUE"},
        {"label": "\"PURPLE\"       (#A672EF)", "body": "PURPLE"},
        {"label": "\"BLUE\"         (#00F0FF)", "body": "BLUE"},
        {"label": "\"SOFT_BLUE\"    (#99BBEE)", "body": "SOFT_BLUE"},
        {"label": "\"RED\"          (#FF2400)", "body": "RED"},
        {"label": "\"ORANGE\"       (#FFC400)", "body": "ORANGE"},
        {"label": "\"CHEESE\"       (#F8C53A)", "body": "CHEESE"},
        {"label": "\"LUA_LOG\"      (#5555FF)", "body": "LUA_LOG"},
        {"label": "\"LUA_ERROR\"    (#FF5555)", "body": "LUA_ERROR"},
        {"label": "\"LUA_PING\"     (#A155DA)", "body": "LUA_PING"},
        {"label": "\"DEFAULT\"      (#5AAAFF)", "body": "DEFAULT"},
        {"label": "\"DISCORD\"      (#5865F2)", "body": "DISCORD"},
        {"label": "\"KOFI\"         (#27AAE0)", "body": "KOFI"},
        {"label": "\"GITHUB\"       (#FFFFFF)", "body": "GITHUB"},
        {"label": "\"MODRINTH\"     (#1BD96A)", "body": "MODRINTH"},
        {"label": "\"CURSEFORGE\"   (#F16436)", "body": "CURSEFORGE"},

        {"label": "\"black\"        (#000000)", "body": "black"},
        {"label": "\"dark_blue\"    (#0000AA)", "body": "dark_blue"},
        {"label": "\"dark_green\"   (#00AA00)", "body": "dark_green"},
        {"label": "\"dark_aqua\"    (#00AAAA)", "body": "dark_aqua"},
        {"label": "\"dark_red\"     (#AA0000)", "body": "dark_red"},
        {"label": "\"dark_purple\"  (#AA00AA)", "body": "dark_purple"},
        {"label": "\"gold\"         (#FFAA00)", "body": "gold"},
        {"label": "\"gray\"         (#AAAAAA)", "body": "gray"},
        {"label": "\"dark_gray\"    (#555555)", "body": "dark_gray"},
        {"label": "\"green\"        (#55FF55)", "body": "green"},
        {"label": "\"aqua\"         (#55FFFF)", "body": "aqua"},
        {"label": "\"light_purple\" (#FF55FF)", "body": "light_purple"},
        {"label": "\"yellow\"       (#FFFF55)", "body": "yellow"},
        {"label": "\"white\"        (#FFFFFF)", "body": "white"}
      ],

      "anyOf": [
        {"pattern": "^#?[0-9A-Fa-f]{1,6}$$"},
        {"pattern": "^([Aa][Ww][Ee][Ss][Oo][Mm][Ee]_[Bb][Ll][Uu][Ee]|[Pp][Uu][Rr][Pp][Ll][Ee]|[Bb][Ll][Uu][Ee]|[Ss][Oo][Ff][Tt]_[Bb][Ll][Uu][Ee]|[Rr][Ee][Dd]|[Oo][Rr][Aa][Nn][Gg][Ee]|[Cc][Hh][Ee]{2}[Ss][Ee]|[Ll][Uu][Aa]_[Ll][Oo][Gg]|[Ll][Uu][Aa]_[Ee][Rr][Rr][Oo][Rr]|[Ll][Uu][Aa]_[Pp][Ii][Nn][Gg]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt]|[Dd][Ii][Ss][Cc][Oo][Rr][Dd]|[Kk][Oo][Ff][Ii]|[Gg][Ii][Tt][Hh][Uu][Bb]|[Mm][Oo][Dd][Rr][Ii][Nn][Tt][Hh]|[Cc][Uu][Rr][Ss][Ee][Ff][Oo][Rr][Gg][Ee]|[Bb][Ll][Aa][Cc][Kk]|[Dd][Aa][Rr][Kk]_[Bb][Ll][Uu][Ee]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Ee][Ee][Nn]|[Dd][Aa][Rr][Kk]_[Aa][Qq][Uu][Aa]|[Dd][Aa][Rr][Kk]_[Rr][Ee][Dd]|[Dd][Aa][Rr][Kk]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Gg][Oo][Ll][Dd]|[Gg][Rr][Aa][Yy]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Aa][Yy]|[Gg][Rr][Ee][Ee][Nn]|[Aa][Qq][Uu][Aa]|[Ll][Ii][Gg][Hh][Tt]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Yy][Ee][Ll][Ll][Oo][Ww]|[Ww][Hh][Ii][Tt][Ee])$"}
      ]
    },

    "badge_color_donator": {
      "description": "The color of the Donator badge.\nColor can either be a special named color or a hex value. (The `#` is optional.)",
      "markdownDescription": "```ts\nbadge_color_donator: string\n```\n***\nThe color of the **Donator** badge.\n\nColor can either be a special named color or a hex value. (The `#` is optional.)",

      "type": "string",

      "defaultSnippets": [
        {"label": "\"#...\"", "body": "#${1:RRGGBB}"},
        {"label": "\"AWESOME_BLUE\" (#5EA5FF)", "body": "AWESOME_BLUE"},
        {"label": "\"PURPLE\"       (#A672EF)", "body": "PURPLE"},
        {"label": "\"BLUE\"         (#00F0FF)", "body": "BLUE"},
        {"label": "\"SOFT_BLUE\"    (#99BBEE)", "body": "SOFT_BLUE"},
        {"label": "\"RED\"          (#FF2400)", "body": "RED"},
        {"label": "\"ORANGE\"       (#FFC400)", "body": "ORANGE"},
        {"label": "\"CHEESE\"       (#F8C53A)", "body": "CHEESE"},
        {"label": "\"LUA_LOG\"      (#5555FF)", "body": "LUA_LOG"},
        {"label": "\"LUA_ERROR\"    (#FF5555)", "body": "LUA_ERROR"},
        {"label": "\"LUA_PING\"     (#A155DA)", "body": "LUA_PING"},
        {"label": "\"DEFAULT\"      (#5AAAFF)", "body": "DEFAULT"},
        {"label": "\"DISCORD\"      (#5865F2)", "body": "DISCORD"},
        {"label": "\"KOFI\"         (#27AAE0)", "body": "KOFI"},
        {"label": "\"GITHUB\"       (#FFFFFF)", "body": "GITHUB"},
        {"label": "\"MODRINTH\"     (#1BD96A)", "body": "MODRINTH"},
        {"label": "\"CURSEFORGE\"   (#F16436)", "body": "CURSEFORGE"},

        {"label": "\"black\"        (#000000)", "body": "black"},
        {"label": "\"dark_blue\"    (#0000AA)", "body": "dark_blue"},
        {"label": "\"dark_green\"   (#00AA00)", "body": "dark_green"},
        {"label": "\"dark_aqua\"    (#00AAAA)", "body": "dark_aqua"},
        {"label": "\"dark_red\"     (#AA0000)", "body": "dark_red"},
        {"label": "\"dark_purple\"  (#AA00AA)", "body": "dark_purple"},
        {"label": "\"gold\"         (#FFAA00)", "body": "gold"},
        {"label": "\"gray\"         (#AAAAAA)", "body": "gray"},
        {"label": "\"dark_gray\"    (#555555)", "body": "dark_gray"},
        {"label": "\"green\"        (#55FF55)", "body": "green"},
        {"label": "\"aqua\"         (#55FFFF)", "body": "aqua"},
        {"label": "\"light_purple\" (#FF55FF)", "body": "light_purple"},
        {"label": "\"yellow\"       (#FFFF55)", "body": "yellow"},
        {"label": "\"white\"        (#FFFFFF)", "body": "white"}
      ],

      "anyOf": [
        {"pattern": "^#?[0-9A-Fa-f]{1,6}$$"},
        {"pattern": "^([Aa][Ww][Ee][Ss][Oo][Mm][Ee]_[Bb][Ll][Uu][Ee]|[Pp][Uu][Rr][Pp][Ll][Ee]|[Bb][Ll][Uu][Ee]|[Ss][Oo][Ff][Tt]_[Bb][Ll][Uu][Ee]|[Rr][Ee][Dd]|[Oo][Rr][Aa][Nn][Gg][Ee]|[Cc][Hh][Ee]{2}[Ss][Ee]|[Ll][Uu][Aa]_[Ll][Oo][Gg]|[Ll][Uu][Aa]_[Ee][Rr][Rr][Oo][Rr]|[Ll][Uu][Aa]_[Pp][Ii][Nn][Gg]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt]|[Dd][Ii][Ss][Cc][Oo][Rr][Dd]|[Kk][Oo][Ff][Ii]|[Gg][Ii][Tt][Hh][Uu][Bb]|[Mm][Oo][Dd][Rr][Ii][Nn][Tt][Hh]|[Cc][Uu][Rr][Ss][Ee][Ff][Oo][Rr][Gg][Ee]|[Bb][Ll][Aa][Cc][Kk]|[Dd][Aa][Rr][Kk]_[Bb][Ll][Uu][Ee]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Ee][Ee][Nn]|[Dd][Aa][Rr][Kk]_[Aa][Qq][Uu][Aa]|[Dd][Aa][Rr][Kk]_[Rr][Ee][Dd]|[Dd][Aa][Rr][Kk]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Gg][Oo][Ll][Dd]|[Gg][Rr][Aa][Yy]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Aa][Yy]|[Gg][Rr][Ee][Ee][Nn]|[Aa][Qq][Uu][Aa]|[Ll][Ii][Gg][Hh][Tt]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Yy][Ee][Ll][Ll][Oo][Ww]|[Ww][Hh][Ii][Tt][Ee])$"}
      ]
    },

    "badge_color_translator": {
      "description": "The color of the Translator badge.\nColor can either be a special named color or a hex value. (The `#` is optional.)",
      "markdownDescription": "```ts\nbadge_color_translator: string\n```\n***\nThe color of the **Translator** badge.\n\nColor can either be a special named color or a hex value. (The `#` is optional.)",

      "type": "string",

      "defaultSnippets": [
        {"label": "\"#...\"", "body": "#${1:RRGGBB}"},
        {"label": "\"AWESOME_BLUE\" (#5EA5FF)", "body": "AWESOME_BLUE"},
        {"label": "\"PURPLE\"       (#A672EF)", "body": "PURPLE"},
        {"label": "\"BLUE\"         (#00F0FF)", "body": "BLUE"},
        {"label": "\"SOFT_BLUE\"    (#99BBEE)", "body": "SOFT_BLUE"},
        {"label": "\"RED\"          (#FF2400)", "body": "RED"},
        {"label": "\"ORANGE\"       (#FFC400)", "body": "ORANGE"},
        {"label": "\"CHEESE\"       (#F8C53A)", "body": "CHEESE"},
        {"label": "\"LUA_LOG\"      (#5555FF)", "body": "LUA_LOG"},
        {"label": "\"LUA_ERROR\"    (#FF5555)", "body": "LUA_ERROR"},
        {"label": "\"LUA_PING\"     (#A155DA)", "body": "LUA_PING"},
        {"label": "\"DEFAULT\"      (#5AAAFF)", "body": "DEFAULT"},
        {"label": "\"DISCORD\"      (#5865F2)", "body": "DISCORD"},
        {"label": "\"KOFI\"         (#27AAE0)", "body": "KOFI"},
        {"label": "\"GITHUB\"       (#FFFFFF)", "body": "GITHUB"},
        {"label": "\"MODRINTH\"     (#1BD96A)", "body": "MODRINTH"},
        {"label": "\"CURSEFORGE\"   (#F16436)", "body": "CURSEFORGE"},

        {"label": "\"black\"        (#000000)", "body": "black"},
        {"label": "\"dark_blue\"    (#0000AA)", "body": "dark_blue"},
        {"label": "\"dark_green\"   (#00AA00)", "body": "dark_green"},
        {"label": "\"dark_aqua\"    (#00AAAA)", "body": "dark_aqua"},
        {"label": "\"dark_red\"     (#AA0000)", "body": "dark_red"},
        {"label": "\"dark_purple\"  (#AA00AA)", "body": "dark_purple"},
        {"label": "\"gold\"         (#FFAA00)", "body": "gold"},
        {"label": "\"gray\"         (#AAAAAA)", "body": "gray"},
        {"label": "\"dark_gray\"    (#555555)", "body": "dark_gray"},
        {"label": "\"green\"        (#55FF55)", "body": "green"},
        {"label": "\"aqua\"         (#55FFFF)", "body": "aqua"},
        {"label": "\"light_purple\" (#FF55FF)", "body": "light_purple"},
        {"label": "\"yellow\"       (#FFFF55)", "body": "yellow"},
        {"label": "\"white\"        (#FFFFFF)", "body": "white"}
      ],

      "anyOf": [
        {"pattern": "^#?[0-9A-Fa-f]{1,6}$$"},
        {"pattern": "^([Aa][Ww][Ee][Ss][Oo][Mm][Ee]_[Bb][Ll][Uu][Ee]|[Pp][Uu][Rr][Pp][Ll][Ee]|[Bb][Ll][Uu][Ee]|[Ss][Oo][Ff][Tt]_[Bb][Ll][Uu][Ee]|[Rr][Ee][Dd]|[Oo][Rr][Aa][Nn][Gg][Ee]|[Cc][Hh][Ee]{2}[Ss][Ee]|[Ll][Uu][Aa]_[Ll][Oo][Gg]|[Ll][Uu][Aa]_[Ee][Rr][Rr][Oo][Rr]|[Ll][Uu][Aa]_[Pp][Ii][Nn][Gg]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt]|[Dd][Ii][Ss][Cc][Oo][Rr][Dd]|[Kk][Oo][Ff][Ii]|[Gg][Ii][Tt][Hh][Uu][Bb]|[Mm][Oo][Dd][Rr][Ii][Nn][Tt][Hh]|[Cc][Uu][Rr][Ss][Ee][Ff][Oo][Rr][Gg][Ee]|[Bb][Ll][Aa][Cc][Kk]|[Dd][Aa][Rr][Kk]_[Bb][Ll][Uu][Ee]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Ee][Ee][Nn]|[Dd][Aa][Rr][Kk]_[Aa][Qq][Uu][Aa]|[Dd][Aa][Rr][Kk]_[Rr][Ee][Dd]|[Dd][Aa][Rr][Kk]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Gg][Oo][Ll][Dd]|[Gg][Rr][Aa][Yy]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Aa][Yy]|[Gg][Rr][Ee][Ee][Nn]|[Aa][Qq][Uu][Aa]|[Ll][Ii][Gg][Hh][Tt]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Yy][Ee][Ll][Ll][Oo][Ww]|[Ww][Hh][Ii][Tt][Ee])$"}
      ]
    },

    "badge_color_texture_artist": {
      "description": "The color of the Texture Artist badge.\nColor can either be a special named color or a hex value. (The `#` is optional.)",
      "markdownDescription": "```ts\nbadge_color_texture_artist: string\n```\n***\nThe color of the **Texture Artist** badge.\n\nColor can either be a special named color or a hex value. (The `#` is optional.)",

      "type": "string",

      "defaultSnippets": [
        {"label": "\"#...\"", "body": "#${1:RRGGBB}"},
        {"label": "\"AWESOME_BLUE\" (#5EA5FF)", "body": "AWESOME_BLUE"},
        {"label": "\"PURPLE\"       (#A672EF)", "body": "PURPLE"},
        {"label": "\"BLUE\"         (#00F0FF)", "body": "BLUE"},
        {"label": "\"SOFT_BLUE\"    (#99BBEE)", "body": "SOFT_BLUE"},
        {"label": "\"RED\"          (#FF2400)", "body": "RED"},
        {"label": "\"ORANGE\"       (#FFC400)", "body": "ORANGE"},
        {"label": "\"CHEESE\"       (#F8C53A)", "body": "CHEESE"},
        {"label": "\"LUA_LOG\"      (#5555FF)", "body": "LUA_LOG"},
        {"label": "\"LUA_ERROR\"    (#FF5555)", "body": "LUA_ERROR"},
        {"label": "\"LUA_PING\"     (#A155DA)", "body": "LUA_PING"},
        {"label": "\"DEFAULT\"      (#5AAAFF)", "body": "DEFAULT"},
        {"label": "\"DISCORD\"      (#5865F2)", "body": "DISCORD"},
        {"label": "\"KOFI\"         (#27AAE0)", "body": "KOFI"},
        {"label": "\"GITHUB\"       (#FFFFFF)", "body": "GITHUB"},
        {"label": "\"MODRINTH\"     (#1BD96A)", "body": "MODRINTH"},
        {"label": "\"CURSEFORGE\"   (#F16436)", "body": "CURSEFORGE"},

        {"label": "\"black\"        (#000000)", "body": "black"},
        {"label": "\"dark_blue\"    (#0000AA)", "body": "dark_blue"},
        {"label": "\"dark_green\"   (#00AA00)", "body": "dark_green"},
        {"label": "\"dark_aqua\"    (#00AAAA)", "body": "dark_aqua"},
        {"label": "\"dark_red\"     (#AA0000)", "body": "dark_red"},
        {"label": "\"dark_purple\"  (#AA00AA)", "body": "dark_purple"},
        {"label": "\"gold\"         (#FFAA00)", "body": "gold"},
        {"label": "\"gray\"         (#AAAAAA)", "body": "gray"},
        {"label": "\"dark_gray\"    (#555555)", "body": "dark_gray"},
        {"label": "\"green\"        (#55FF55)", "body": "green"},
        {"label": "\"aqua\"         (#55FFFF)", "body": "aqua"},
        {"label": "\"light_purple\" (#FF55FF)", "body": "light_purple"},
        {"label": "\"yellow\"       (#FFFF55)", "body": "yellow"},
        {"label": "\"white\"        (#FFFFFF)", "body": "white"}
      ],

      "anyOf": [
        {"pattern": "^#?[0-9A-Fa-f]{1,6}$$"},
        {"pattern": "^([Aa][Ww][Ee][Ss][Oo][Mm][Ee]_[Bb][Ll][Uu][Ee]|[Pp][Uu][Rr][Pp][Ll][Ee]|[Bb][Ll][Uu][Ee]|[Ss][Oo][Ff][Tt]_[Bb][Ll][Uu][Ee]|[Rr][Ee][Dd]|[Oo][Rr][Aa][Nn][Gg][Ee]|[Cc][Hh][Ee]{2}[Ss][Ee]|[Ll][Uu][Aa]_[Ll][Oo][Gg]|[Ll][Uu][Aa]_[Ee][Rr][Rr][Oo][Rr]|[Ll][Uu][Aa]_[Pp][Ii][Nn][Gg]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt]|[Dd][Ii][Ss][Cc][Oo][Rr][Dd]|[Kk][Oo][Ff][Ii]|[Gg][Ii][Tt][Hh][Uu][Bb]|[Mm][Oo][Dd][Rr][Ii][Nn][Tt][Hh]|[Cc][Uu][Rr][Ss][Ee][Ff][Oo][Rr][Gg][Ee]|[Bb][Ll][Aa][Cc][Kk]|[Dd][Aa][Rr][Kk]_[Bb][Ll][Uu][Ee]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Ee][Ee][Nn]|[Dd][Aa][Rr][Kk]_[Aa][Qq][Uu][Aa]|[Dd][Aa][Rr][Kk]_[Rr][Ee][Dd]|[Dd][Aa][Rr][Kk]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Gg][Oo][Ll][Dd]|[Gg][Rr][Aa][Yy]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Aa][Yy]|[Gg][Rr][Ee][Ee][Nn]|[Aa][Qq][Uu][Aa]|[Ll][Ii][Gg][Hh][Tt]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Yy][Ee][Ll][Ll][Oo][Ww]|[Ww][Hh][Ii][Tt][Ee])$"}
      ]
    },

    "badge_color_contest": {
      "description": "The color of the Contest badge.\nColor can either be a special named color or a hex value. (The `#` is optional.)",
      "markdownDescription": "```ts\nbadge_color_contest: string\n```\n***\nThe color of the **Contest** badge.\n\nColor can either be a special named color or a hex value. (The `#` is optional.)",

      "type": "string",

      "defaultSnippets": [
        {"label": "\"#...\"", "body": "#${1:RRGGBB}"},
        {"label": "\"AWESOME_BLUE\" (#5EA5FF)", "body": "AWESOME_BLUE"},
        {"label": "\"PURPLE\"       (#A672EF)", "body": "PURPLE"},
        {"label": "\"BLUE\"         (#00F0FF)", "body": "BLUE"},
        {"label": "\"SOFT_BLUE\"    (#99BBEE)", "body": "SOFT_BLUE"},
        {"label": "\"RED\"          (#FF2400)", "body": "RED"},
        {"label": "\"ORANGE\"       (#FFC400)", "body": "ORANGE"},
        {"label": "\"CHEESE\"       (#F8C53A)", "body": "CHEESE"},
        {"label": "\"LUA_LOG\"      (#5555FF)", "body": "LUA_LOG"},
        {"label": "\"LUA_ERROR\"    (#FF5555)", "body": "LUA_ERROR"},
        {"label": "\"LUA_PING\"     (#A155DA)", "body": "LUA_PING"},
        {"label": "\"DEFAULT\"      (#5AAAFF)", "body": "DEFAULT"},
        {"label": "\"DISCORD\"      (#5865F2)", "body": "DISCORD"},
        {"label": "\"KOFI\"         (#27AAE0)", "body": "KOFI"},
        {"label": "\"GITHUB\"       (#FFFFFF)", "body": "GITHUB"},
        {"label": "\"MODRINTH\"     (#1BD96A)", "body": "MODRINTH"},
        {"label": "\"CURSEFORGE\"   (#F16436)", "body": "CURSEFORGE"},

        {"label": "\"black\"        (#000000)", "body": "black"},
        {"label": "\"dark_blue\"    (#0000AA)", "body": "dark_blue"},
        {"label": "\"dark_green\"   (#00AA00)", "body": "dark_green"},
        {"label": "\"dark_aqua\"    (#00AAAA)", "body": "dark_aqua"},
        {"label": "\"dark_red\"     (#AA0000)", "body": "dark_red"},
        {"label": "\"dark_purple\"  (#AA00AA)", "body": "dark_purple"},
        {"label": "\"gold\"         (#FFAA00)", "body": "gold"},
        {"label": "\"gray\"         (#AAAAAA)", "body": "gray"},
        {"label": "\"dark_gray\"    (#555555)", "body": "dark_gray"},
        {"label": "\"green\"        (#55FF55)", "body": "green"},
        {"label": "\"aqua\"         (#55FFFF)", "body": "aqua"},
        {"label": "\"light_purple\" (#FF55FF)", "body": "light_purple"},
        {"label": "\"yellow\"       (#FFFF55)", "body": "yellow"},
        {"label": "\"white\"        (#FFFFFF)", "body": "white"}
      ],

      "anyOf": [
        {"pattern": "^#?[0-9A-Fa-f]{1,6}$$"},
        {"pattern": "^([Aa][Ww][Ee][Ss][Oo][Mm][Ee]_[Bb][Ll][Uu][Ee]|[Pp][Uu][Rr][Pp][Ll][Ee]|[Bb][Ll][Uu][Ee]|[Ss][Oo][Ff][Tt]_[Bb][Ll][Uu][Ee]|[Rr][Ee][Dd]|[Oo][Rr][Aa][Nn][Gg][Ee]|[Cc][Hh][Ee]{2}[Ss][Ee]|[Ll][Uu][Aa]_[Ll][Oo][Gg]|[Ll][Uu][Aa]_[Ee][Rr][Rr][Oo][Rr]|[Ll][Uu][Aa]_[Pp][Ii][Nn][Gg]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt]|[Dd][Ii][Ss][Cc][Oo][Rr][Dd]|[Kk][Oo][Ff][Ii]|[Gg][Ii][Tt][Hh][Uu][Bb]|[Mm][Oo][Dd][Rr][Ii][Nn][Tt][Hh]|[Cc][Uu][Rr][Ss][Ee][Ff][Oo][Rr][Gg][Ee]|[Bb][Ll][Aa][Cc][Kk]|[Dd][Aa][Rr][Kk]_[Bb][Ll][Uu][Ee]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Ee][Ee][Nn]|[Dd][Aa][Rr][Kk]_[Aa][Qq][Uu][Aa]|[Dd][Aa][Rr][Kk]_[Rr][Ee][Dd]|[Dd][Aa][Rr][Kk]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Gg][Oo][Ll][Dd]|[Gg][Rr][Aa][Yy]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Aa][Yy]|[Gg][Rr][Ee][Ee][Nn]|[Aa][Qq][Uu][Aa]|[Ll][Ii][Gg][Hh][Tt]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Yy][Ee][Ll][Ll][Oo][Ww]|[Ww][Hh][Ii][Tt][Ee])$"}
      ]
    },

    "badge_color_discord_staff": {
      "description": "The color of the Discord Staff badge.\nColor can either be a special named color or a hex value. (The `#` is optional.)",
      "markdownDescription": "```ts\nbadge_color_discord_staff: string\n```\n***\nThe color of the **Discord Staff** badge.\n\nColor can either be a special named color or a hex value. (The `#` is optional.)",

      "type": "string",

      "defaultSnippets": [
        {"label": "\"#...\"", "body": "#${1:RRGGBB}"},
        {"label": "\"AWESOME_BLUE\" (#5EA5FF)", "body": "AWESOME_BLUE"},
        {"label": "\"PURPLE\"       (#A672EF)", "body": "PURPLE"},
        {"label": "\"BLUE\"         (#00F0FF)", "body": "BLUE"},
        {"label": "\"SOFT_BLUE\"    (#99BBEE)", "body": "SOFT_BLUE"},
        {"label": "\"RED\"          (#FF2400)", "body": "RED"},
        {"label": "\"ORANGE\"       (#FFC400)", "body": "ORANGE"},
        {"label": "\"CHEESE\"       (#F8C53A)", "body": "CHEESE"},
        {"label": "\"LUA_LOG\"      (#5555FF)", "body": "LUA_LOG"},
        {"label": "\"LUA_ERROR\"    (#FF5555)", "body": "LUA_ERROR"},
        {"label": "\"LUA_PING\"     (#A155DA)", "body": "LUA_PING"},
        {"label": "\"DEFAULT\"      (#5AAAFF)", "body": "DEFAULT"},
        {"label": "\"DISCORD\"      (#5865F2)", "body": "DISCORD"},
        {"label": "\"KOFI\"         (#27AAE0)", "body": "KOFI"},
        {"label": "\"GITHUB\"       (#FFFFFF)", "body": "GITHUB"},
        {"label": "\"MODRINTH\"     (#1BD96A)", "body": "MODRINTH"},
        {"label": "\"CURSEFORGE\"   (#F16436)", "body": "CURSEFORGE"},

        {"label": "\"black\"        (#000000)", "body": "black"},
        {"label": "\"dark_blue\"    (#0000AA)", "body": "dark_blue"},
        {"label": "\"dark_green\"   (#00AA00)", "body": "dark_green"},
        {"label": "\"dark_aqua\"    (#00AAAA)", "body": "dark_aqua"},
        {"label": "\"dark_red\"     (#AA0000)", "body": "dark_red"},
        {"label": "\"dark_purple\"  (#AA00AA)", "body": "dark_purple"},
        {"label": "\"gold\"         (#FFAA00)", "body": "gold"},
        {"label": "\"gray\"         (#AAAAAA)", "body": "gray"},
        {"label": "\"dark_gray\"    (#555555)", "body": "dark_gray"},
        {"label": "\"green\"        (#55FF55)", "body": "green"},
        {"label": "\"aqua\"         (#55FFFF)", "body": "aqua"},
        {"label": "\"light_purple\" (#FF55FF)", "body": "light_purple"},
        {"label": "\"yellow\"       (#FFFF55)", "body": "yellow"},
        {"label": "\"white\"        (#FFFFFF)", "body": "white"}
      ],

      "anyOf": [
        {"pattern": "^#?[0-9A-Fa-f]{1,6}$$"},
        {"pattern": "^([Aa][Ww][Ee][Ss][Oo][Mm][Ee]_[Bb][Ll][Uu][Ee]|[Pp][Uu][Rr][Pp][Ll][Ee]|[Bb][Ll][Uu][Ee]|[Ss][Oo][Ff][Tt]_[Bb][Ll][Uu][Ee]|[Rr][Ee][Dd]|[Oo][Rr][Aa][Nn][Gg][Ee]|[Cc][Hh][Ee]{2}[Ss][Ee]|[Ll][Uu][Aa]_[Ll][Oo][Gg]|[Ll][Uu][Aa]_[Ee][Rr][Rr][Oo][Rr]|[Ll][Uu][Aa]_[Pp][Ii][Nn][Gg]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt]|[Dd][Ii][Ss][Cc][Oo][Rr][Dd]|[Kk][Oo][Ff][Ii]|[Gg][Ii][Tt][Hh][Uu][Bb]|[Mm][Oo][Dd][Rr][Ii][Nn][Tt][Hh]|[Cc][Uu][Rr][Ss][Ee][Ff][Oo][Rr][Gg][Ee]|[Bb][Ll][Aa][Cc][Kk]|[Dd][Aa][Rr][Kk]_[Bb][Ll][Uu][Ee]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Ee][Ee][Nn]|[Dd][Aa][Rr][Kk]_[Aa][Qq][Uu][Aa]|[Dd][Aa][Rr][Kk]_[Rr][Ee][Dd]|[Dd][Aa][Rr][Kk]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Gg][Oo][Ll][Dd]|[Gg][Rr][Aa][Yy]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Aa][Yy]|[Gg][Rr][Ee][Ee][Nn]|[Aa][Qq][Uu][Aa]|[Ll][Ii][Gg][Hh][Tt]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Yy][Ee][Ll][Ll][Oo][Ww]|[Ww][Hh][Ii][Tt][Ee])$"}
      ]
    },

    "badge_color_dev": {
      "description": "The color of the Developer badge.\nColor can either be a special named color or a hex value. (The `#` is optional.)",
      "markdownDescription": "```ts\nbadge_color_dev: string\n```\n***\nThe color of the **Developer** badge.\n\nColor can either be a special named color or a hex value. (The `#` is optional.)",

      "type": "string",

      "defaultSnippets": [
        {"label": "\"#...\"", "body": "#${1:RRGGBB}"},
        {"label": "\"AWESOME_BLUE\" (#5EA5FF)", "body": "AWESOME_BLUE"},
        {"label": "\"PURPLE\"       (#A672EF)", "body": "PURPLE"},
        {"label": "\"BLUE\"         (#00F0FF)", "body": "BLUE"},
        {"label": "\"SOFT_BLUE\"    (#99BBEE)", "body": "SOFT_BLUE"},
        {"label": "\"RED\"          (#FF2400)", "body": "RED"},
        {"label": "\"ORANGE\"       (#FFC400)", "body": "ORANGE"},
        {"label": "\"CHEESE\"       (#F8C53A)", "body": "CHEESE"},
        {"label": "\"LUA_LOG\"      (#5555FF)", "body": "LUA_LOG"},
        {"label": "\"LUA_ERROR\"    (#FF5555)", "body": "LUA_ERROR"},
        {"label": "\"LUA_PING\"     (#A155DA)", "body": "LUA_PING"},
        {"label": "\"DEFAULT\"      (#5AAAFF)", "body": "DEFAULT"},
        {"label": "\"DISCORD\"      (#5865F2)", "body": "DISCORD"},
        {"label": "\"KOFI\"         (#27AAE0)", "body": "KOFI"},
        {"label": "\"GITHUB\"       (#FFFFFF)", "body": "GITHUB"},
        {"label": "\"MODRINTH\"     (#1BD96A)", "body": "MODRINTH"},
        {"label": "\"CURSEFORGE\"   (#F16436)", "body": "CURSEFORGE"},

        {"label": "\"black\"        (#000000)", "body": "black"},
        {"label": "\"dark_blue\"    (#0000AA)", "body": "dark_blue"},
        {"label": "\"dark_green\"   (#00AA00)", "body": "dark_green"},
        {"label": "\"dark_aqua\"    (#00AAAA)", "body": "dark_aqua"},
        {"label": "\"dark_red\"     (#AA0000)", "body": "dark_red"},
        {"label": "\"dark_purple\"  (#AA00AA)", "body": "dark_purple"},
        {"label": "\"gold\"         (#FFAA00)", "body": "gold"},
        {"label": "\"gray\"         (#AAAAAA)", "body": "gray"},
        {"label": "\"dark_gray\"    (#555555)", "body": "dark_gray"},
        {"label": "\"green\"        (#55FF55)", "body": "green"},
        {"label": "\"aqua\"         (#55FFFF)", "body": "aqua"},
        {"label": "\"light_purple\" (#FF55FF)", "body": "light_purple"},
        {"label": "\"yellow\"       (#FFFF55)", "body": "yellow"},
        {"label": "\"white\"        (#FFFFFF)", "body": "white"}
      ],

      "anyOf": [
        {"pattern": "^#?[0-9A-Fa-f]{1,6}$$"},
        {"pattern": "^([Aa][Ww][Ee][Ss][Oo][Mm][Ee]_[Bb][Ll][Uu][Ee]|[Pp][Uu][Rr][Pp][Ll][Ee]|[Bb][Ll][Uu][Ee]|[Ss][Oo][Ff][Tt]_[Bb][Ll][Uu][Ee]|[Rr][Ee][Dd]|[Oo][Rr][Aa][Nn][Gg][Ee]|[Cc][Hh][Ee]{2}[Ss][Ee]|[Ll][Uu][Aa]_[Ll][Oo][Gg]|[Ll][Uu][Aa]_[Ee][Rr][Rr][Oo][Rr]|[Ll][Uu][Aa]_[Pp][Ii][Nn][Gg]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt]|[Dd][Ii][Ss][Cc][Oo][Rr][Dd]|[Kk][Oo][Ff][Ii]|[Gg][Ii][Tt][Hh][Uu][Bb]|[Mm][Oo][Dd][Rr][Ii][Nn][Tt][Hh]|[Cc][Uu][Rr][Ss][Ee][Ff][Oo][Rr][Gg][Ee]|[Bb][Ll][Aa][Cc][Kk]|[Dd][Aa][Rr][Kk]_[Bb][Ll][Uu][Ee]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Ee][Ee][Nn]|[Dd][Aa][Rr][Kk]_[Aa][Qq][Uu][Aa]|[Dd][Aa][Rr][Kk]_[Rr][Ee][Dd]|[Dd][Aa][Rr][Kk]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Gg][Oo][Ll][Dd]|[Gg][Rr][Aa][Yy]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Aa][Yy]|[Gg][Rr][Ee][Ee][Nn]|[Aa][Qq][Uu][Aa]|[Ll][Ii][Gg][Hh][Tt]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Yy][Ee][Ll][Ll][Oo][Ww]|[Ww][Hh][Ii][Tt][Ee])$"}
      ]
    },

    "badge_color_immortalized": {
      "description": "The color of the Immortalized badge.\nColor can either be a special named color or a hex value. (The `#` is optional.)",
      "markdownDescription": "```ts\nbadge_color_immortalized: string\n```\n***\nThe color of the **Immortalized** badge.\n\nColor can either be a special named color or a hex value. (The `#` is optional.)",

      "type": "string",

      "defaultSnippets": [
        {"label": "\"#...\"", "body": "#${1:RRGGBB}"},
        {"label": "\"AWESOME_BLUE\" (#5EA5FF)", "body": "AWESOME_BLUE"},
        {"label": "\"PURPLE\"       (#A672EF)", "body": "PURPLE"},
        {"label": "\"BLUE\"         (#00F0FF)", "body": "BLUE"},
        {"label": "\"SOFT_BLUE\"    (#99BBEE)", "body": "SOFT_BLUE"},
        {"label": "\"RED\"          (#FF2400)", "body": "RED"},
        {"label": "\"ORANGE\"       (#FFC400)", "body": "ORANGE"},
        {"label": "\"CHEESE\"       (#F8C53A)", "body": "CHEESE"},
        {"label": "\"LUA_LOG\"      (#5555FF)", "body": "LUA_LOG"},
        {"label": "\"LUA_ERROR\"    (#FF5555)", "body": "LUA_ERROR"},
        {"label": "\"LUA_PING\"     (#A155DA)", "body": "LUA_PING"},
        {"label": "\"DEFAULT\"      (#5AAAFF)", "body": "DEFAULT"},
        {"label": "\"DISCORD\"      (#5865F2)", "body": "DISCORD"},
        {"label": "\"KOFI\"         (#27AAE0)", "body": "KOFI"},
        {"label": "\"GITHUB\"       (#FFFFFF)", "body": "GITHUB"},
        {"label": "\"MODRINTH\"     (#1BD96A)", "body": "MODRINTH"},
        {"label": "\"CURSEFORGE\"   (#F16436)", "body": "CURSEFORGE"},

        {"label": "\"black\"        (#000000)", "body": "black"},
        {"label": "\"dark_blue\"    (#0000AA)", "body": "dark_blue"},
        {"label": "\"dark_green\"   (#00AA00)", "body": "dark_green"},
        {"label": "\"dark_aqua\"    (#00AAAA)", "body": "dark_aqua"},
        {"label": "\"dark_red\"     (#AA0000)", "body": "dark_red"},
        {"label": "\"dark_purple\"  (#AA00AA)", "body": "dark_purple"},
        {"label": "\"gold\"         (#FFAA00)", "body": "gold"},
        {"label": "\"gray\"         (#AAAAAA)", "body": "gray"},
        {"label": "\"dark_gray\"    (#555555)", "body": "dark_gray"},
        {"label": "\"green\"        (#55FF55)", "body": "green"},
        {"label": "\"aqua\"         (#55FFFF)", "body": "aqua"},
        {"label": "\"light_purple\" (#FF55FF)", "body": "light_purple"},
        {"label": "\"yellow\"       (#FFFF55)", "body": "yellow"},
        {"label": "\"white\"        (#FFFFFF)", "body": "white"}
      ],

      "anyOf": [
        {"pattern": "^#?[0-9A-Fa-f]{1,6}$$"},
        {"pattern": "^([Aa][Ww][Ee][Ss][Oo][Mm][Ee]_[Bb][Ll][Uu][Ee]|[Pp][Uu][Rr][Pp][Ll][Ee]|[Bb][Ll][Uu][Ee]|[Ss][Oo][Ff][Tt]_[Bb][Ll][Uu][Ee]|[Rr][Ee][Dd]|[Oo][Rr][Aa][Nn][Gg][Ee]|[Cc][Hh][Ee]{2}[Ss][Ee]|[Ll][Uu][Aa]_[Ll][Oo][Gg]|[Ll][Uu][Aa]_[Ee][Rr][Rr][Oo][Rr]|[Ll][Uu][Aa]_[Pp][Ii][Nn][Gg]|[Dd][Ee][Ff][Aa][Uu][Ll][Tt]|[Dd][Ii][Ss][Cc][Oo][Rr][Dd]|[Kk][Oo][Ff][Ii]|[Gg][Ii][Tt][Hh][Uu][Bb]|[Mm][Oo][Dd][Rr][Ii][Nn][Tt][Hh]|[Cc][Uu][Rr][Ss][Ee][Ff][Oo][Rr][Gg][Ee]|[Bb][Ll][Aa][Cc][Kk]|[Dd][Aa][Rr][Kk]_[Bb][Ll][Uu][Ee]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Ee][Ee][Nn]|[Dd][Aa][Rr][Kk]_[Aa][Qq][Uu][Aa]|[Dd][Aa][Rr][Kk]_[Rr][Ee][Dd]|[Dd][Aa][Rr][Kk]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Gg][Oo][Ll][Dd]|[Gg][Rr][Aa][Yy]|[Dd][Aa][Rr][Kk]_[Gg][Rr][Aa][Yy]|[Gg][Rr][Ee][Ee][Nn]|[Aa][Qq][Uu][Aa]|[Ll][Ii][Gg][Hh][Tt]_[Pp][Uu][Rr][Pp][Ll][Ee]|[Yy][Ee][Ll][Ll][Oo][Ww]|[Ww][Hh][Ii][Tt][Ee])$"}
      ]
    },

    "background": {
      "description": "Does nothing... Yet.",
      "markdownDescription": "```ts\nbackground: unknown\n```\n***\nDoes nothing... Yet.",

      "type": "string",

      "anyOf": [
        {"enum": ["DEFAULT", "CHEESE", "CLOUDS", "COOKIE", "RAINBOW", "INSCRYPTION", "SPACE", "FADE"]},
        {"pattern": "^([Dd][Ee][Ff][Aa][Uu][Ll][Tt]|[Cc][Hh][Ee]{2}[Ss][Ee]|[Cc][Ll][Oo][Uu][Dd][Ss]|[Cc][Oo][Oo][Kk][Ii][Ee]|[Rr][Aa][Ii][Nn][Bb][Oo][Ww]|[Ii][Nn][Ss][Cc][Rr][Yy][Pp][Tt][Ii][Oo][Nn]|[Ss][Pp][Aa][Cc][Ee]|[Ff][Aa][Dd][Ee])$"}
      ]
    },

    "id": {
      "description": "Does nothing... Yet.",
      "markdownDescription": "```ts\nid: unknown\n```\n***\nDoes nothing... Yet.",

      "type": "string"
    },

    "autoScripts": {
      "description": "A list of relative paths to scripts the avatar should automatically execute.\nThe scripts are executed in the order given.\n\nIf empty, no scripts are automatically executed.\nIf this does not exist, all scripts are automatically executed in alphanumeric order.",
      "markdownDescription": "```ts\nautoScripts: string[]\n```\n***\nA list of relative paths to scripts the avatar should automatically execute.  \nThe scripts are executed in the order given.\n\nIf empty, no scripts are automatically executed.  \nIf this does not exist, all scripts are automatically executed in alphanumeric order.",

      "type": "array",

      "uniqueItems": true,
      "items": {
        "type": "string",

        "defaultSnippets": [{"body": "$1"}],

        "minLength": 1,
        "pattern": "[^ \\f\\n\\r\\t]"
      }
    },

    "autoAnims": {
      "description": "A list of animations the avatar should automatically play.\n\nIf this is empty or does not exist, no animations are automatically played.",
      "markdownDescription": "```ts\nautoAnims: string[]\n```\n***\nA list of animations the avatar should automatically play.\n\nIf this is empty or does not exist, no animations are automatically played.",

      "type": "array",

      "uniqueItems": true,
      "items": {
        "type": "string",

        "defaultSnippets": [{"body": "$1"}],

        "minLength": 1,
        "pattern": "[^ \\f\\n\\r\\t]"
      }
    },

    "ignoredTextures": {
      "description": "A list of textures that should not be loaded by Figura.\n\nMainly used for special textures such as templates or guides.",
      "markdownDescription": "```ts\nignoredTextures: string[]\n```\n***\nA list of textures that should not be loaded by Figura.\n\nMainly used for special textures such as templates or guides.",

      "type": "array",

      "uniqueItems": true,
      "items": {
        "type": "string",

        "defaultSnippets": [{"body": "$1"}],

        "minLength": 1,
        "pattern": "[^ \\f\\n\\r\\t]"
      }
    },

    "resources": {
      "description": "A list of globs that determine what files of this avatar's own folder may be accessed by the scripts in it",
      "markdownDescription": "```ts\nresources: string[]\n```\n***\nA list of globs that determine what files of this avatar's own folder may be accessed by the scripts in it",

      "type": "array",

      "uniqueItems": true,
      "items": {
        "type": "string",

        "defaultSnippets": [{"body": "$1"}],

        "minLength": 1,
        "pattern": "^(?!\\/|[A-Z]:\\\\\\\\)(?:[^[{]*(?:(?<!\\\\)(?:\\\\\\\\)*(?:(?:\\[[^\\]/\\\\]+])|{(?:[^[{}]*(?:(?<!\\\\)(?:\\\\\\\\)*(?:(?:\\[[^\\]/\\\\]+])|\\\\[[{}]))?)*(?<!\\\\)(?:\\\\\\\\)*}|\\\\[[{]))?)*$"
      }
    },

    "customizations": {
      "description": "Contains a list of key-value pairs where the keys are paths to model parts (minus the starting \"models.\") and the values are the starting customizations for that part.",
      "markdownDescription": "```ts\ncustomizations: {\n  [partPath]: {\n    remove: boolean,\n    visible: boolean,\n    parentType: string,\n    moveTo: string,\n    primaryRenderType: string,\n    secondaryRenderType: string,\n    smooth: boolean\n  }\n}\n```\n***\nContains a list of key-value pairs where the keys are paths to model parts (minus the starting `models.`) and the values are the starting customizations for that part.",

      "type": "object",

      "defaultSnippets": [
        {"label": "{}", "body": "^{$1}"},
        {"label": "{...}", "body": {
          "${1:bbmodel_name.path.to.part}": "^$2"
        }}
      ],

      "properties": {
        "bbmodel_name.path.to.part": {"$ref": "#/definitions/customization"}
      },

      "additionalProperties": {"$ref": "#/definitions/customization"}
    }
  },

  "anyOf": [
    {"not": {"required": ["author", "authors"]}},
    {"oneOf": [
      {"required": ["author"], "not": {"required": ["authors"]}},
      {"required": ["authors"], "not": {"required": ["author"]}}
    ]}
  ]
}
